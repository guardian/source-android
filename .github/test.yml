#name: Test
#on:
#  pull_request:
#  merge_group:
#    types: [checks_requested]
#  push:
#    branches: [ main ]
#  workflow_dispatch:
#
#concurrency:
#  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
#  cancel-in-progress: true
#
#jobs:
#  docs-only-check:
#    name: Check docs only
#    runs-on: ubuntu-latest
#    timeout-minutes: 5
#    outputs:
#      not-docs: ${{ steps.non-docs-changes.outputs.any_changed }}
#    steps:
#      - uses: actions/checkout@v4
#        with:
#          fetch-depth: 0
#
#      - name: Get changed files (except for docs)
#        id: non-docs-changes
#        uses: tj-actions/changed-files@2d756ea4c53f7f6b397767d8723b3a10a9f35bf2 # v44.0.0
#        with:
#          files_ignore: |
#            docs/**
#            *.md
#
#  build:
#    name: Debug build
#    runs-on: 4core-ubuntu-latest
#    timeout-minutes: 30
#    needs: docs-only-check
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Set up JDK 17
#        if: needs.docs-only-check.outputs.not-docs == 'true'
#        uses: actions/setup-java@v4
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - name: Setup Gradle
#        if: needs.docs-only-check.outputs.not-docs == 'true'
#        uses: gradle/actions/setup-gradle@v3
#        with:
#          gradle-version: wrapper
#
#      - name: Extract branch name (and remove slashes)
#        shell: bash
#        run: |
#          branch=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
#          echo "branch_no_slash=$(echo $branch | sed -r 's/\//_/g')" >> $GITHUB_ENV
#        id: extract_branch
#
#      - name: Assemble debug build with gradlew
#        if: needs.docs-only-check.outputs.not-docs == 'true'
#        run: |
#          mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties
#          ./gradlew assembleDebug :system-test:assembleDebug -PbuildNumber=1 -PversionNameSuffix=$VERSION_NAME_SUFFIX
#        env:
#          VERSION_NAME_SUFFIX: .pr-${{ github.event.pull_request.number }}.${{ env.branch_no_slash }}.${{ github.run_number }}
#      - name: Find APKs
#        if: needs.docs-only-check.outputs.not-docs == 'true'
#        run: find . -type f -name "*.apk"
#      - name: Upload Debug APK as build artifact
#        if: needs.docs-only-check.outputs.not-docs == 'true'
#        uses: actions/upload-artifact@v4
#        with:
#          name: debug-apk
#          path: |
#            ./android-news-app/build/outputs/apk/debug/android-news-app-*-debug.apk
#            ./system-test/build/outputs/apk/codeKey/debug/system-test-codeKey-debug.apk
#
#  unit-tests:
#    name: Unit tests
#    runs-on: 4core-ubuntu-latest
#    timeout-minutes: 30
#    needs: docs-only-check
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Set up JDK 17
#        if: needs.docs-only-check.outputs.not-docs == 'true'
#        uses: actions/setup-java@v4
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - name: Setup Gradle
#        if: needs.docs-only-check.outputs.not-docs == 'true'
#        uses: gradle/actions/setup-gradle@v3
#        with:
#          gradle-version: wrapper
#
#      - name: Run unit test
#        if: needs.docs-only-check.outputs.not-docs == 'true'
#        run: |
#          mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties
#          ./gradlew android-news-app:testReleaseUnitTest testReleaseUnitTest
#
#  instrumentation-tests:
#    name: Instrumentation tests
#    runs-on: 4core-ubuntu-latest
#    timeout-minutes: 60
#    needs: [docs-only-check, build, unit-tests, screenshot-tests]
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Set up JDK 17
#        if: needs.docs-only-check.outputs.not-docs == 'true'
#        uses: actions/setup-java@v4
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      # This step allows us to run emulators on linux runners. GMD have hardware acceleration
#      # enabled, so we need this step. Some more detail on this link: https://github.blog/changelog/2023-02-23-hardware-accelerated-android-virtualization-on-actions-windows-and-linux-larger-hosted-runners/
#      - name: Enable hardware acceleration
#        if: needs.docs-only-check.outputs.not-docs == 'true'
#        run: |
#          echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
#          sudo udevadm control --reload-rules
#          sudo udevadm trigger --name-match=kvm
#
#      - name: Setup Gradle
#        if: needs.docs-only-check.outputs.not-docs == 'true'
#        uses: gradle/actions/setup-gradle@v3
#        with:
#          gradle-version: wrapper
#
#      - name: Setup Android SDK
#        if: needs.docs-only-check.outputs.not-docs == 'true'
#        uses: android-actions/setup-android@v3
#
#      - name: Copy CI gradle.properties
#        if: needs.docs-only-check.outputs.not-docs == 'true'
#        run: mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties
#
#      - name: Run tests
#        if: needs.docs-only-check.outputs.not-docs == 'true'
#        run: ./gradlew cleanManagedDevices --unused-only &&
#          ./gradlew ciDeviceDebugAndroidTest -Dorg.gradle.workers.max=1
#          -Pandroid.testoptions.manageddevices.emulator.gpu="swiftshader_indirect"
#          -Pandroid.experimental.testOptions.managedDevices.emulator.showKernelLogging=true
#
#      - name: Upload test reports
#        if: needs.docs-only-check.outputs.not-docs == 'true' && (success() || failure())
#        uses: actions/upload-artifact@v4
#        with:
#          name: test-reports
#          path: '**/build/reports/androidTests'
#
#  screenshot-tests:
#    name: Screenshot tests
#    runs-on: 4core-ubuntu-latest
#    timeout-minutes: 30
#    needs: docs-only-check
#    permissions: write-all
#
#    steps:
#      - uses: actions/checkout@v4
#
#      - name: Set up JDK 17
#        if: needs.docs-only-check.outputs.not-docs == 'true'
#        uses: actions/setup-java@v4
#        with:
#          java-version: '17'
#          distribution: 'temurin'
#
#      - name: Setup Gradle
#        if: needs.docs-only-check.outputs.not-docs == 'true'
#        uses: gradle/actions/setup-gradle@v3
#        with:
#          gradle-version: wrapper
#
#      - name: Run tests
#        id: screenshot-tests
#        if: needs.docs-only-check.outputs.not-docs == 'true'
#        run: |
#          mkdir -p ~/.gradle ; cp .github/ci-gradle.properties ~/.gradle/gradle.properties
#          ./gradlew verifyPaparazziDebug --continue
#
#      - name: Create companion branch and comment content
#        id: create-companion-branch
#        # Don't run on merge queue branches
#        if: ${{ !startsWith(github.ref, 'refs/heads/gh-readonly-queue/') && failure() }}
#        shell: bash
#        env:
#          PR_NUMBER: ${{ github.event.number }}
#        run: |
#          # Name for companion branch
#          COMPANION_BRANCH=companion/${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}
#
#          git branch -D "$COMPANION_BRANCH" || true
#          git checkout "$COMPANION_BRANCH" || git checkout -B "$COMPANION_BRANCH"
#
#          # Find all the files starting with delta-*.png
#          files_to_add=$(find . -type f -name "delta-*.png")
#
#          # Check for invalid file names and add only valid ones
#          for file in $files_to_add; do
#            git add -f "$file"
#          done
#
#          # Don't commit any other files
#          git restore .
#
#          git config --global user.name GuardianAndroid
#          git config --global user.email guardian.android@gmail.com
#          git commit -m "Add screenshot diff"
#          git push origin HEAD:"$COMPANION_BRANCH" -f
#
#          delimiter="$(openssl rand -hex 8)"
#          {
#            echo "reports<<${delimiter}"
#
#            # Create markdown table header
#            echo "**Screenshot tests failed.**<br/>Please check the failure diff images:"
#            echo "| Image |"
#            echo "|-------|"
#          } >> "$GITHUB_OUTPUT"
#
#          # Iterate over the files and create table rows
#          for file in $files_to_add; do
#            # Get the file name, strip down to only test class and function name
#            fileName=$(basename "$file" | sed 's/^[^_]*_//')
#            echo "| $fileName ![](https://github.com/${{ github.repository }}/blob/$COMPANION_BRANCH/$file?raw=true) |" >> "$GITHUB_OUTPUT"
#          done
#          echo "${delimiter}" >> "$GITHUB_OUTPUT"
#          echo "BRANCH IS ${GITHUB_REF}"
#
#
#      - name: Find Comment
#        uses: peter-evans/find-comment@v3
#        id: find-comment
#        # Don't run on merge queue branches
#        if: ${{ always() && !startsWith(github.ref, 'refs/heads/gh-readonly-queue/') }}
#        with:
#          issue-number: ${{ github.event.number }}
#          comment-author: 'github-actions[bot]'
#          body-includes: Screenshot tests failed
#
#      - name: Add or update comment on PR
#        uses: peter-evans/create-or-update-comment@v4
#        # Don't run on merge queue branches, only run if screenshot tests failed and companion branch created
#        if: ${{ failure() && !startsWith(github.ref, 'refs/heads/gh-readonly-queue/') && steps.screenshot-tests.outcome != 'success' && steps.create-companion-branch.outcome == 'success' }}
#        with:
#          comment-id: ${{ steps.find-comment.outputs.comment-id }}
#          issue-number: ${{ github.event.number }}
#          body: ${{ steps.create-companion-branch.outputs.reports }}
#          edit-mode: replace
#
#      - name: Resolve comment on PR
#        uses: peter-evans/create-or-update-comment@v4
#        # Don't run on merge queue branches, only run if screenshot tests passed and comment exists
#        if: ${{ success() && !startsWith(github.ref, 'refs/heads/gh-readonly-queue/') && success() && steps.find-comment.outputs.comment-id != '' }}
#        with:
#          comment-id: ${{ steps.find-comment.outputs.comment-id }}
#          issue-number: ${{ github.event.number }}
#          body: |
#            **Screenshot tests failed.**
#            Errors resolved.
#          edit-mode: replace
#
#      - name: Cleanup outdated companion branches
#        if: ${{ always() }}
#        run: |
#          # Find outdated companion branches with last commit date
#          git branch -r --format="%(refname:lstrip=3)" | grep companion/ | while read -r branch; do
#            last_commit_date_timestamp=$(git log -1 --format=%ct "origin/$branch")
#            now_timestamp=$(date +%s)
#            echo "branch: $branch now_timestamp: $now_timestamp last_commit_date_timestamp: $last_commit_date_timestamp"
#            # For testing purpose, delete branch if it's older than 1 second
#            # if [ $((now_timestamp - last_commit_date_timestamp)) -gt 1 ]; then
#            # Delete branch if it's older than 1 month
#            if [ $((now_timestamp - last_commit_date_timestamp)) -gt 2592000 ]; then
#              echo "Deleting $branch"
#              git push origin --delete "$branch"
#            fi
#          done
#
#  system-tests:
#    name: System tests
#    # Only run on PRs that have system-test label
#    if: contains(github.event.pull_request.labels.*.name, 'system-test')
#    runs-on: 4core-ubuntu-latest
#    timeout-minutes: 30
#    # Only run if all other checks have passed
#    needs:
#      - docs-only-check
#      - build
#      - unit-tests
#      - instrumentation-tests
#      - screenshot-tests
#    steps:
#      # Grab artifacts from Build job
#      - uses: actions/download-artifact@v4
#        if: needs.docs-only-check.outputs.not-docs == 'true'
#        with:
#          name: debug-apk
#
#      - name: Authenticate with firebase
#        if: needs.docs-only-check.outputs.not-docs == 'true'
#        run: |
#          echo "$GCLOUD_SERVICE_KEY" | gcloud auth activate-service-account --key-file=-
#        env:
#          GCLOUD_SERVICE_KEY: ${{ secrets.GCLOUD_SERVICE_KEY }}
#
#      - name: Run system tests (@CoverDropTest)
#        if: needs.docs-only-check.outputs.not-docs == 'true'
#        run: |
#          gcloud firebase test android run \
#                --project gu-push-notifications-code \
#                --type instrumentation \
#                --timeout 25m \
#                --num-flaky-test-attempts=2 \
#                --environment-variables clearPackageData=true \
#                --app ./android-news-app/build/outputs/apk/debug/android-news-app-*-debug.apk \
#                --test ./system-test/build/outputs/apk/codeKey/debug/system-test-codeKey-debug.apk \
#                --test-targets "annotation com.guardian.test.system.CoverDropTest" \
#                --device model=redfin,version=30,locale=en_GB,orientation=portrait
#
#      - name: Run system tests (@FirebaseTest)
#        if: needs.docs-only-check.outputs.not-docs == 'true'
#        run: |
#          gcloud firebase test android run \
#                --project gu-push-notifications-code \
#                --type instrumentation \
#                --timeout 25m \
#                --num-flaky-test-attempts=2 \
#                --environment-variables clearPackageData=true \
#                --app ./android-news-app/build/outputs/apk/debug/android-news-app-*-debug.apk \
#                --test ./system-test/build/outputs/apk/codeKey/debug/system-test-codeKey-debug.apk \
#                --test-targets "annotation com.guardian.test.system.FirebaseTest" \
#                --device model=redfin,version=30,locale=en_GB,orientation=portrait